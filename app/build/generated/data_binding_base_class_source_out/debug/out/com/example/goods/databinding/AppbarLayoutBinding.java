// Generated by view binder compiler. Do not edit!
package com.example.goods.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.goods.R;
import com.example.goods.basemvp.base.TitlebarView;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppbarLayoutBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CollapsingToolbarLayout mainCollapsingToolbarLayout1;

  @NonNull
  public final RecyclerView mainRecyclerView1;

  @NonNull
  public final TitlebarView title2;

  private AppbarLayoutBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CollapsingToolbarLayout mainCollapsingToolbarLayout1,
      @NonNull RecyclerView mainRecyclerView1, @NonNull TitlebarView title2) {
    this.rootView = rootView;
    this.mainCollapsingToolbarLayout1 = mainCollapsingToolbarLayout1;
    this.mainRecyclerView1 = mainRecyclerView1;
    this.title2 = title2;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppbarLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppbarLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.appbar_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppbarLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mainCollapsingToolbarLayout1;
      CollapsingToolbarLayout mainCollapsingToolbarLayout1 = rootView.findViewById(id);
      if (mainCollapsingToolbarLayout1 == null) {
        break missingId;
      }

      id = R.id.mainRecyclerView1;
      RecyclerView mainRecyclerView1 = rootView.findViewById(id);
      if (mainRecyclerView1 == null) {
        break missingId;
      }

      id = R.id.title2;
      TitlebarView title2 = rootView.findViewById(id);
      if (title2 == null) {
        break missingId;
      }

      return new AppbarLayoutBinding((CoordinatorLayout) rootView, mainCollapsingToolbarLayout1,
          mainRecyclerView1, title2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
